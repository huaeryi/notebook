{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"dp_pack/","title":"\u80cc\u5305dp","text":""},{"location":"dp_pack/#0-1","title":"0-1\u80cc\u5305","text":"<ul> <li>0-1\u80cc\u5305\u6307\u7684\u662f\u5bb9\u91cf\u4e3aW\u7684\u80cc\u5305\uff0c\u91cd\u91cfw[i]\u4e14\u4ef7\u503cv[i]\u7684\u7269\u54c1\uff0c\u6bcf\u4e2a\u7269\u54c1\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u53d6\u6216\u4e0d\u53d6\uff0c\u600e\u6837\u653e\u5165\u80cc\u5305\u4f7f\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u4ef7\u503c\u6700\u5927\u3002</li> <li>\u4e8c\u7ef4\u6570\u7ec4\u89e3\u6cd5\uff0c\u5185\u5b58\u8fc7\u5927</li> </ul> C++ <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint w[1001];\nint v[1001];\nint dp[101][1001];\nint main()\n{\nint W, N;\ncin &gt;&gt; W &gt;&gt; N;\nfor (int i = 1; i &lt;= N; i++) {\ncin &gt;&gt; w[i] &gt;&gt; v[i];\n}\nfor (int i = 0; i &lt;= N; i++) {\ndp[i][0] = 0;\n}\nfor (int i = 1; i &lt;= N; i++) {\nfor (int j = 1; j &lt;= W; j++) {\nif (j &lt; w[i]) {\ndp[i][j] = dp[i - 1][j];\n} else {\ndp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w[i]] + v[i]);        }\n}\n}\ncout &lt;&lt; dp[N][W];\nreturn 0;\n}\n</code></pre> <ul> <li>\u4e00\u7ef4\u6570\u7ec4\u89e3\u6cd5</li> </ul> C++ <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint w[1001];\nint v[1001];\nint dp[1001];\nint main()\n{\ndp[0] = 0;\nint W, N;\ncin &gt;&gt; W &gt;&gt; N;\nfor (int i = 1; i &lt;= N; i++) {\ncin &gt;&gt; w[i] &gt;&gt; v[i];\n}\nfor (int i = 0; i &lt;= N; i++) {\nfor (int j = W; j &gt;= w[i]; j--) {\nif (j - w[i] &gt;= 0) {\ndp[j] = max(dp[j], dp[j - w[i]] + v[i]);\n}\n}\n}\ncout &lt;&lt; dp[W];\nreturn 0;\n}\n</code></pre> <ul> <li>P1048 \u91c7\u836f</li> </ul>"},{"location":"dp_pack/#_1","title":"\u5b8c\u5168\u80cc\u5305","text":"<ul> <li>\u572801\u80cc\u5305\u7684\u57fa\u7840\u4e0a\uff0c\u6bcf\u4e2a\u7269\u54c1\u90fd\u53ef\u4ee5\u53d6\u4efb\u610f\u6570\u91cf</li> </ul> C++ <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nlong long w[10001];\nlong long v[10001];\nlong long dp[10000001];\nint main()\n{\nlong long W, n;\ncin &gt;&gt; W &gt;&gt; n;\ndp[0] = 0;\nfor (int i = 1; i &lt;= n; i++) {\ncin &gt;&gt; w[i] &gt;&gt; v[i];\n}\nfor (int i = 1; i &lt;= n; i++) {\nfor (int j = w[i]; j &lt;= W; j++) {\ndp[j] = max(dp[j], dp[j - w[i]] + v[i]);\n}\n}\ncout &lt;&lt; dp[W];\nreturn 0;\n}\n</code></pre> <ul> <li>P1616 \u75af\u72c2\u7684\u91c7\u836f</li> </ul>"},{"location":"ds_disjoint/","title":"\u5e76\u67e5\u96c6","text":"<ul> <li>\u5e76\u67e5\u96c6\u7684\u5b9e\u73b0\u662f\u4e00\u4e2a\u68ee\u6797\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b91-n\u521a\u5f00\u59cb\u90fd\u662f\u72ec\u7acb\u7684\u6811\u7684\u6839\u8282\u70b9\uff0c\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u7236\u8282\u70b9\u6570\u7ec4\u6765\u4f53\u73b0\u54ea\u4e9b\u8282\u70b9\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u5e26\u6709find\u548cunite\u64cd\u4f5c\u7684\u5e76\u67e5\u96c6\u5b9e\u73b0\u5982\u4e0b</li> </ul> C++ <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct dsu\n{\nvector&lt;size_t&gt; pa;\nexplicit dsu(size_t size) : pa(size) {\niota(pa.begin(), pa.end(), 0);\n}\nsize_t dsu::find(size_t x)\n{\nreturn pa[x] == x ? x : pa[x] = find(pa[x]);\n}\nvoid dsu::unite(size_t x, size_t y)\n{\npa[find(x)] = find(y);\n}\n};\n</code></pre>"},{"location":"stl/","title":"\u5e38\u7528stl\u5e93","text":""},{"location":"stl/#sort","title":"\u6392\u5e8f <code>sort</code>","text":"C++ <pre><code>int nums[100];\n//\u5b9a\u4e49\u4e0d\u540c\u7684cmp\u51fd\u6570\u53ef\u4ee5\u5f97\u5230\u4e0d\u540c\u7684\u6392\u5e8f\nbool cmp(int &amp;a, int &amp;b) {\nreturn a &lt; b;\n}\nsort(nums, nums + n, cmp);\n</code></pre>"},{"location":"stl/#lower_bound-upper_bound","title":"\u4e8c\u5206\u67e5\u627e <code>lower_bound()</code> <code>upper_bound()</code>","text":"C++ <pre><code>#include &lt;algorithm&gt;\n//\u53d6\u5f97\u6700\u5c0f\u7684\u4e0b\u6807i\u4f7f a[i] &gt;= x\nlower_bound(a,a+n,x)-a      //\u4e0b\u6807\u4ece0\u5f00\u59cb\nlower_bound(a+1,a+n+1,x)-a  //\u4e0b\u6807\u4ece1\u5f00\u59cb\n//\u53d6\u5f97\u6700\u5c0f\u7684\u4e0b\u6807i\u4f7f a[i] &gt; x\nupper_bound(a,a+n,x)-a      //\u4e0b\u6807\u4ece0\u5f00\u59cb\nupper_bound(a+1,a+n+1,x)-a  //\u4e0b\u6807\u4ece1\u5f00\u59cb\n</code></pre> <ul> <li>\u53ef\u4ee5\u5bf9\u6bd4\u4e24\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u82e5\u4e0d\u540c\u5219\u627e\u5230\u4e86a[i] == x\uff0c\u5dee\u503c\u5373\u4e3ax\u7684\u4e2a\u6570</li> </ul>"},{"location":"stl/#set-map","title":"set &amp; map","text":"C++ <pre><code>set&lt;int&gt; st;\nfor (auto i : st) {\ncout &lt;&lt; *it &lt;&lt; endl;\n}\nmap&lt;string, int&gt; mp;\nfor (auto it = mp.begin(); it != mp.end(); it++) {\ncout &lt;&lt; it-&gt;first &lt;&lt; endl;\ncout &lt;&lt; it-&gt;second &lt;&lt; endl;\n}\n</code></pre>"}]}